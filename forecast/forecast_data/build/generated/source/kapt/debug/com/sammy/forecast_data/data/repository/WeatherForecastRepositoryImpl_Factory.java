// Generated by Dagger (https://dagger.dev).
package com.sammy.forecast_data.data.repository;

import com.sammy.forecast_data.data.network.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherForecastRepositoryImpl_Factory implements Factory<WeatherForecastRepositoryImpl> {
  private final Provider<ApiService> apiServiceProvider;

  public WeatherForecastRepositoryImpl_Factory(Provider<ApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public WeatherForecastRepositoryImpl get() {
    return newInstance(apiServiceProvider.get());
  }

  public static WeatherForecastRepositoryImpl_Factory create(
      Provider<ApiService> apiServiceProvider) {
    return new WeatherForecastRepositoryImpl_Factory(apiServiceProvider);
  }

  public static WeatherForecastRepositoryImpl newInstance(ApiService apiService) {
    return new WeatherForecastRepositoryImpl(apiService);
  }
}
